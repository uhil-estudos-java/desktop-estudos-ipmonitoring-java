/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.ip.monitoring.config;

import br.com.ip.monitoring.monitor.Monitor;
import br.com.ip.monitoring.util.MascaraIP;
import br.com.ip.monitoring.util.MaskIpRegEx;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author uhitlei.barbosa
 */
public class Configuracoes extends javax.swing.JFrame {

  /**
   * Creates new form Configuracoes
   */
  Properties propConfig;
  configDTO dtoConfig;
  File proFile;
  File profileXML;

  public Configuracoes() {
    this.profileXML = new File("config.xml");
    this.proFile = new File("config.properties");
    this.propConfig = new Properties();
    this.dtoConfig = new configDTO();

    initComponents();
    this.setResizable(false);
    this.setLocationRelativeTo(null);
    this.propConfig = GetParametros(proFile);
    preencherCampos(this.propConfig);

  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jLabel2 = new javax.swing.JLabel();
    servidorSMTP = new javax.swing.JPanel();
    jLabel3 = new javax.swing.JLabel();
    jLabel4 = new javax.swing.JLabel();
    tf_server_smtp = new javax.swing.JTextField();
    tf_server_smtp_port = new javax.swing.JTextField();
    Proxy = new javax.swing.JPanel();
    jcb_check_proxy = new javax.swing.JCheckBox();
    jLabel5 = new javax.swing.JLabel();
    tf_server_proxy_port = new javax.swing.JTextField();
    jLabel6 = new javax.swing.JLabel();
    tf_server_proxy = new javax.swing.JTextField();
    Login = new javax.swing.JPanel();
    tf_usuario_server = new javax.swing.JTextField();
    jLabel7 = new javax.swing.JLabel();
    tf_senha_server = new javax.swing.JPasswordField();
    jLabel8 = new javax.swing.JLabel();
    Destinatario = new javax.swing.JPanel();
    tf_email_destino = new javax.swing.JTextField();
    jLabel9 = new javax.swing.JLabel();
    jLabel10 = new javax.swing.JLabel();
    tf_subject = new javax.swing.JTextField();
    serverEmail = new javax.swing.JPanel();
    LabelImage = new javax.swing.JLabel();
    jcbMailServer = new javax.swing.JComboBox();
    jLabel1 = new javax.swing.JLabel();
    Dados = new javax.swing.JPanel();
    jLabel11 = new javax.swing.JLabel();
    jLabel12 = new javax.swing.JLabel();
    tf_tempo = new javax.swing.JTextField();
    tf_ultimo_ip = new javax.swing.JTextField();
    bt_Salvar = new javax.swing.JButton();
    br_cancelar = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
    setTitle("Configurações");
    setIconImage(new javax.swing.ImageIcon(getClass().getResource("/br/com/ip/monitoring/images/Settings60.png")).getImage());
    setName("configuracoes"); // NOI18N

    jLabel2.setFont(new java.awt.Font("Verdana", 0, 36)); // NOI18N
    jLabel2.setForeground(new java.awt.Color(0, 0, 204));
    jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ip/monitoring/images/Settings60.png"))); // NOI18N
    jLabel2.setText("Configurações");

    servidorSMTP.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Servidor SMTP", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 0, 12), new java.awt.Color(0, 102, 0))); // NOI18N

    jLabel3.setText("Url Servidor SMTP:");

    jLabel4.setText("Porta:");

    tf_server_smtp.setText("smtp.gmail.com");
    tf_server_smtp.setToolTipText("verifique as configurações do seu servidor de email.");
    tf_server_smtp.setEnabled(false);

    tf_server_smtp_port.setText("465");
    tf_server_smtp_port.setToolTipText("verifique as configurações do seu servidor de email.");
    tf_server_smtp_port.setEnabled(false);

    javax.swing.GroupLayout servidorSMTPLayout = new javax.swing.GroupLayout(servidorSMTP);
    servidorSMTP.setLayout(servidorSMTPLayout);
    servidorSMTPLayout.setHorizontalGroup(
      servidorSMTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(servidorSMTPLayout.createSequentialGroup()
        .addGroup(servidorSMTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(tf_server_smtp, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel3))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(servidorSMTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(servidorSMTPLayout.createSequentialGroup()
            .addComponent(jLabel4)
            .addGap(0, 37, Short.MAX_VALUE))
          .addGroup(servidorSMTPLayout.createSequentialGroup()
            .addComponent(tf_server_smtp_port)
            .addContainerGap())))
    );
    servidorSMTPLayout.setVerticalGroup(
      servidorSMTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(servidorSMTPLayout.createSequentialGroup()
        .addGap(22, 22, 22)
        .addGroup(servidorSMTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel3)
          .addComponent(jLabel4))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(servidorSMTPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(tf_server_smtp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(tf_server_smtp_port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    Proxy.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Proxy", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 0, 12), new java.awt.Color(0, 102, 0))); // NOI18N

    jcb_check_proxy.setText("Servidor Proxy");
    jcb_check_proxy.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jcb_check_proxyActionPerformed(evt);
      }
    });

    jLabel5.setText("Host/IP Proxy");

    tf_server_proxy_port.setToolTipText("verifique as configurações do seu servidor de email.");
    tf_server_proxy_port.setEnabled(false);

    jLabel6.setText("Porta:");

    tf_server_proxy.setToolTipText("verifique as configurações do seu servidor de email.");
    tf_server_proxy.setEnabled(false);

    javax.swing.GroupLayout ProxyLayout = new javax.swing.GroupLayout(Proxy);
    Proxy.setLayout(ProxyLayout);
    ProxyLayout.setHorizontalGroup(
      ProxyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(ProxyLayout.createSequentialGroup()
        .addGroup(ProxyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jcb_check_proxy)
          .addGroup(ProxyLayout.createSequentialGroup()
            .addGroup(ProxyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(tf_server_proxy, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jLabel5))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(ProxyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(ProxyLayout.createSequentialGroup()
                .addComponent(jLabel6)
                .addGap(0, 89, Short.MAX_VALUE))
              .addComponent(tf_server_proxy_port))))
        .addGap(10, 10, 10))
    );
    ProxyLayout.setVerticalGroup(
      ProxyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(ProxyLayout.createSequentialGroup()
        .addComponent(jcb_check_proxy)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(ProxyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel5)
          .addComponent(jLabel6))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(ProxyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(tf_server_proxy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(tf_server_proxy_port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(0, 0, Short.MAX_VALUE))
    );

    Login.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Login", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 0, 12), new java.awt.Color(0, 102, 0))); // NOI18N

    tf_usuario_server.setToolTipText("Usuario de acesso ao Email: ex: seunome@gmail.com");

    jLabel7.setText("Usuário/e-mail :");

    tf_senha_server.setToolTipText("Sua Senha:");

    jLabel8.setText("Senha:");

    javax.swing.GroupLayout LoginLayout = new javax.swing.GroupLayout(Login);
    Login.setLayout(LoginLayout);
    LoginLayout.setHorizontalGroup(
      LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(LoginLayout.createSequentialGroup()
        .addGroup(LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel7)
          .addComponent(jLabel8))
        .addGap(0, 0, Short.MAX_VALUE))
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginLayout.createSequentialGroup()
        .addGroup(LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(tf_senha_server, javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(tf_usuario_server))
        .addContainerGap())
    );
    LoginLayout.setVerticalGroup(
      LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(LoginLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel7)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(tf_usuario_server, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
        .addComponent(jLabel8)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(tf_senha_server, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap())
    );

    Destinatario.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Destinatário", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 0, 12), new java.awt.Color(0, 102, 0))); // NOI18N

    tf_email_destino.setToolTipText("Usuario de acesso ao Email: ex: seunome@gmail.com");

    jLabel9.setText("E-mail :");

    jLabel10.setText("Assunto:");

    tf_subject.setText("Seu IP mudou!");
    tf_subject.setToolTipText("Usuario de acesso ao Email: ex: seunome@gmail.com");

    javax.swing.GroupLayout DestinatarioLayout = new javax.swing.GroupLayout(Destinatario);
    Destinatario.setLayout(DestinatarioLayout);
    DestinatarioLayout.setHorizontalGroup(
      DestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(DestinatarioLayout.createSequentialGroup()
        .addGroup(DestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel9)
          .addComponent(jLabel10))
        .addGap(0, 0, Short.MAX_VALUE))
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DestinatarioLayout.createSequentialGroup()
        .addGroup(DestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(tf_subject, javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(tf_email_destino))
        .addContainerGap())
    );
    DestinatarioLayout.setVerticalGroup(
      DestinatarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(DestinatarioLayout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jLabel9)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(tf_email_destino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
        .addComponent(jLabel10)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(tf_subject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(6, 6, 6))
    );

    serverEmail.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Servidor Email", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 0, 12), new java.awt.Color(0, 102, 0))); // NOI18N

    LabelImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ip/monitoring/images/Gmail60.png"))); // NOI18N

    jcbMailServer.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Gmail", "Outro..." }));
    jcbMailServer.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jcbMailServerActionPerformed(evt);
      }
    });

    jLabel1.setText("Servidor de Email: ");

    javax.swing.GroupLayout serverEmailLayout = new javax.swing.GroupLayout(serverEmail);
    serverEmail.setLayout(serverEmailLayout);
    serverEmailLayout.setHorizontalGroup(
      serverEmailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, serverEmailLayout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(jLabel1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jcbMailServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(LabelImage)
        .addGap(38, 38, 38))
    );
    serverEmailLayout.setVerticalGroup(
      serverEmailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, serverEmailLayout.createSequentialGroup()
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(serverEmailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(LabelImage)
          .addGroup(serverEmailLayout.createSequentialGroup()
            .addGap(20, 20, 20)
            .addGroup(serverEmailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jcbMailServer, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
        .addContainerGap())
    );

    Dados.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Dados", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Verdana", 0, 12), new java.awt.Color(0, 102, 0))); // NOI18N

    jLabel11.setText("UltimoIP:");

    jLabel12.setText("Tempo(Min):");

    tf_tempo.setText("1");
    tf_tempo.setToolTipText("verifique as configurações do seu servidor de email.");

    tf_ultimo_ip.setDocument(new MascaraIP());
    tf_ultimo_ip.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyPressed(java.awt.event.KeyEvent evt) {
        tf_ultimo_ipKeyPressed(evt);
      }
      public void keyTyped(java.awt.event.KeyEvent evt) {
        tf_ultimo_ipKeyTyped(evt);
      }
    });

    javax.swing.GroupLayout DadosLayout = new javax.swing.GroupLayout(Dados);
    Dados.setLayout(DadosLayout);
    DadosLayout.setHorizontalGroup(
      DadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(DadosLayout.createSequentialGroup()
        .addGroup(DadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel11)
          .addComponent(tf_ultimo_ip, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(DadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(DadosLayout.createSequentialGroup()
            .addComponent(jLabel12)
            .addGap(0, 0, Short.MAX_VALUE))
          .addComponent(tf_tempo))
        .addContainerGap())
    );
    DadosLayout.setVerticalGroup(
      DadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DadosLayout.createSequentialGroup()
        .addContainerGap(24, Short.MAX_VALUE)
        .addGroup(DadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel11)
          .addComponent(jLabel12))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(DadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(tf_tempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(tf_ultimo_ip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(21, 21, 21))
    );

    bt_Salvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ip/monitoring/images/salvar16.png"))); // NOI18N
    bt_Salvar.setText("Salvar");
    bt_Salvar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        bt_SalvarActionPerformed(evt);
      }
    });

    br_cancelar.setText("Cancelar");
    br_cancelar.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        br_cancelarActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel2)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                  .addComponent(serverEmail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 265, Short.MAX_VALUE)
                  .addComponent(Login, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(servidorSMTP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                  .addComponent(Proxy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(Destinatario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(Dados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
              .addGroup(layout.createSequentialGroup()
                .addComponent(bt_Salvar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(br_cancelar)))
            .addGap(0, 0, Short.MAX_VALUE))))
    );

    layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {br_cancelar, bt_Salvar});

    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(28, 28, 28)
        .addComponent(jLabel2)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(Dados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(serverEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
          .addComponent(servidorSMTP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(Proxy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(Login, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(Destinatario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(bt_Salvar)
          .addComponent(br_cancelar))
        .addContainerGap())
    );

    layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {br_cancelar, bt_Salvar});

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jcb_check_proxyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcb_check_proxyActionPerformed
    if (jcb_check_proxy.isSelected()) {
      tf_server_proxy.setEnabled(true);
      tf_server_proxy_port.setEnabled(true);
    } else {
      tf_server_proxy.setEnabled(false);
      tf_server_proxy_port.setEnabled(false);
    }
  }//GEN-LAST:event_jcb_check_proxyActionPerformed

  private void jcbMailServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbMailServerActionPerformed
    if (jcbMailServer.getSelectedIndex() == 0) {
      tf_server_smtp.setText("smtp.gmail.com");
      tf_server_smtp.setEnabled(false);
      tf_server_smtp_port.setText("465");
      tf_server_smtp_port.setEnabled(false);
      LabelImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ip/monitoring/images/Gmail60.png"))); // NOI18N
    } else {
      if (jcbMailServer.getSelectedIndex() == 1) {
        tf_server_smtp.setText("");
        tf_server_smtp.setEnabled(true);
        tf_server_smtp_port.setText("");
        tf_server_smtp_port.setEnabled(true);
        LabelImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/ip/monitoring/images/email_logo60.png"))); // NOI18N
      }
    }
  }//GEN-LAST:event_jcbMailServerActionPerformed

  private void tf_ultimo_ipKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_ultimo_ipKeyPressed
  }//GEN-LAST:event_tf_ultimo_ipKeyPressed

  private void tf_ultimo_ipKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_ultimo_ipKeyTyped
    /*
     if (tf_ultimo_ip.getText().length() <= 11) {
     if (!"0123456789".contains(String.valueOf(evt.getKeyChar()))) {
     tf_ultimo_ip.setText(tf_ultimo_ip.getText().substring(0,tf_ultimo_ip.getText().length()-1));
     System.out.println(evt.toString());
     } else {
     System.out.println(evt.toString());
     }
     }*/
  }//GEN-LAST:event_tf_ultimo_ipKeyTyped

  private void br_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_br_cancelarActionPerformed
    new Monitor();
    this.dispose();
  }//GEN-LAST:event_br_cancelarActionPerformed

  private void bt_SalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_SalvarActionPerformed
    if (validaCampos()) {
      if (AtualizaProperty(this.propConfig)) {
        new Monitor();
        this.dispose();
      }
    }
  }//GEN-LAST:event_bt_SalvarActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(Configuracoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(Configuracoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(Configuracoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(Configuracoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new Configuracoes().setVisible(true);
      }
    });
  }
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel Dados;
  private javax.swing.JPanel Destinatario;
  public javax.swing.JLabel LabelImage;
  private javax.swing.JPanel Login;
  private javax.swing.JPanel Proxy;
  private javax.swing.JButton br_cancelar;
  private javax.swing.JButton bt_Salvar;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel10;
  private javax.swing.JLabel jLabel11;
  private javax.swing.JLabel jLabel12;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JLabel jLabel9;
  private javax.swing.JComboBox jcbMailServer;
  private javax.swing.JCheckBox jcb_check_proxy;
  private javax.swing.JPanel serverEmail;
  private javax.swing.JPanel servidorSMTP;
  private javax.swing.JTextField tf_email_destino;
  private javax.swing.JPasswordField tf_senha_server;
  private javax.swing.JTextField tf_server_proxy;
  private javax.swing.JTextField tf_server_proxy_port;
  private javax.swing.JTextField tf_server_smtp;
  private javax.swing.JTextField tf_server_smtp_port;
  private javax.swing.JTextField tf_subject;
  private javax.swing.JTextField tf_tempo;
  public javax.swing.JTextField tf_ultimo_ip;
  private javax.swing.JTextField tf_usuario_server;
  // End of variables declaration//GEN-END:variables

  private void SalvarConfig() {
    try {
      Properties prop = new Properties();

      prop.load(getClass().getResourceAsStream("jdbc.properties")); //carrega propriedades do arquivo jdbc.properties, 

      //define propriedades
      prop.put("jdbc.driver.class", "com.mysql.jdbc.Driver");
      prop.put("jdbc.user", "root");
      prop.put("jdbc.password", "1234");

      //prop.store(getClass().getResourceAsStream("jdbc.properties"), "Configuração"); //salva no arquivo
      // prop.store(this.getClass().getResourceAsStream("jdbc.properties"), "CONFIG");
    } catch (IOException ex) {
      Logger.getLogger(Configuracoes.class.getName()).log(Level.SEVERE, null, ex);
    }
  }

  private Properties GetParametros(File proFile) {
    FileWriter fw = null;
    BufferedWriter bw = null;
    FileReader fr = null;
    BufferedReader br = null;
    FileOutputStream fo = null;
    FileOutputStream foXml = null;
    //  File proFile = null;
    File proFileXML = null;
    String LinhaConfig = null;
    Properties prop = null;
    FileInputStream fi = null;

    try {
      // prop = new Properties();
      //  proFile = new File("config.properties");
      proFileXML = new File("config.xml");
      LinhaConfig = "";

      if (!this.proFile.exists()) {
        //cria um arquivo (vazio)
        this.proFile.createNewFile();
        proFileXML.createNewFile();
      }

      // fw = new FileWriter(this.proFile);
      //construtor recebe como argumento o objeto do tipo FileWriter
      //   bw = new BufferedWriter(fw);
      //construtor que recebe o objeto do tipo arquivo
      fr = new FileReader(this.proFile);
      //construtor que recebe o objeto do tipo FileReader
      br = new BufferedReader(fr);
      //equanto houver mais linhas

      //  fo = new FileOutputStream(proFile);
      //  foXml = new FileOutputStream(proFileXML);


      //System.out.println(br.readLine());
      while (br.ready()) {
        //lê a proxima linha
        String linha = br.readLine();
        System.out.println(linha);
        if (linha.equalsIgnoreCase("mail.config=true") || linha.equalsIgnoreCase("mail.config=false")) {
          LinhaConfig = linha;
          continue;
        }
      }
      if (!LinhaConfig.equalsIgnoreCase("")) {
        fo = new FileOutputStream(this.proFile, true);
        fi = new FileInputStream(this.proFile);
        prop = new Properties();
        prop.load(fi);
      } else {
        fo = new FileOutputStream(proFile, true);
        foXml = new FileOutputStream(proFileXML, true);
        prop = createNewProperty(prop, fo, foXml);

      }


//      for (Field f : this.dtoConfig.getClass().getDeclaredFields()) {
//        System.out.println(f.getName());
//        try {
//              this.dtoConfig.class.getField("NomeDoAtributo").get(null);
//              this.dtoConfig.getClass().getDeclaredField(f.getName()).set(f.getDeclaringClass(), prop.getProperty("mail."+f.getName()));
//              System.out.println(this.dtoConfig.getClass().getDeclaredField(f.getName()).getDeclaringClass());
//              System.out.println(this.dtoConfig.getClass().getDeclaredField(f.getName()).getClass()+" "+prop.getProperty("mail."+f.getName()));
//          } //catch (NoSuchFieldException ex) {
//           Logger.getLogger(Configuracoes.class.getName()).log(Level.SEVERE, null, ex);
//          } //catch (SecurityException ex) {
//            Logger.getLogger(Configuracoes.class.getName()).log(Level.SEVERE, null, ex);
//          }
//        } catch (IllegalArgumentException ex) {
//          Logger.getLogger(Configuracoes.class.getName()).log(Level.SEVERE, null, ex);
//        }// catch (IllegalAccessException ex) {
//          Logger.getLogger(Configuracoes.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        
//        
//      }

      return prop;
    } catch (IOException ex) {
      Logger.getLogger(Configuracoes.class.getName()).log(Level.SEVERE, null, ex);
    } finally {
      try {
        if (foXml != null) {
          foXml.close();
        }
        if (fo != null) {
          fo.close();
        }
        if (fi != null) {
          fi.close();
        }
        if (bw != null) {
          bw.close();
        }
        if (fw != null) {
          fw.close();
        }
        if (br != null) {
          br.close();
        }
        if (fr != null) {
          fr.close();
        }

      } catch (IOException ex) {
        Logger.getLogger(Configuracoes.class.getName()).log(Level.SEVERE, null, ex);
      }
    }
    return null;
  }

  private Properties createNewProperty(Properties prop, FileOutputStream fo, FileOutputStream foXml) throws IOException {
    if (prop == null) {
      prop = new Properties();
    }
    prop.put("mail.config", "false");
    prop.put("mail.server", "0");
    prop.put("mail.smptUrl", "smtp.gmail.com");
    prop.put("mail.smtpPorta", "465");
    prop.put("mail.loginEmail", "");
    prop.put("mail.senhaEmail", "");
    prop.put("mail.serverProxOn", "false");
    prop.put("mail.proxyHost", "");
    prop.put("mail.proxyPorta", "");
    prop.put("mail.proxyUsuario", "");
    prop.put("mail.proxySenha", "");
    prop.put("mail.emailDestino", "");
    prop.put("mail.emailAssunto", "Seu Ip Mudou");
    prop.put("mail.ultimoIP", "");
    prop.put("mail.tempoMin", "1");
    prop.store(fo, new SimpleDateFormat("dd/MM/yyyy - hh:mm:ss").format(new Date()).toString() + " Configuração de email.");
    prop.storeToXML(foXml, new SimpleDateFormat("dd/MM/yyyy - hh:mm:ss").format(new Date()).toString() + " Configuração de email.");

    return prop;
  }

  private void preencherCampos(Properties propConfig) {
    if (propConfig.getProperty("mail.config").equalsIgnoreCase("true")) {
      this.jcbMailServer.setSelectedIndex(Integer.parseInt(propConfig.getProperty("mail.server")));
      this.tf_server_smtp.setText(propConfig.getProperty("mail.smptUrl"));
      this.tf_server_smtp_port.setText(propConfig.getProperty("mail.smtpPorta"));
      this.tf_usuario_server.setText(propConfig.getProperty("mail.loginEmail"));
      this.tf_senha_server.setText(propConfig.getProperty("mail.senhaEmail"));
      this.jcb_check_proxy.setSelected(Boolean.getBoolean(propConfig.getProperty("mail.serverProxOn")));
      this.tf_server_proxy.setText(propConfig.getProperty("mail.proxyHost"));
      this.tf_server_proxy_port.setText(propConfig.getProperty("mail.proxyPorta"));
      this.tf_email_destino.setText(propConfig.getProperty("mail.emailDestino"));
      this.tf_subject.setText(propConfig.getProperty("mail.emailAssunto"));
      this.tf_ultimo_ip.setText(propConfig.getProperty("mail.ultimoIP"));
      this.tf_tempo.setText(propConfig.getProperty("mail.tempoMin"));
    }
  }

  private boolean AtualizaProperty(Properties prop) {
    FileOutputStream foXml = null;
    FileOutputStream fo = null;
    //  File proFile = null;
    File proFileXML = null;

    try {
      // proFile = new File("config.properties");
      proFileXML = new File("config.xml");
      fo = new FileOutputStream(proFile);
      foXml = new FileOutputStream(proFileXML);
      prop.setProperty("mail.config", "true");
      prop.setProperty("mail.server", String.valueOf(jcbMailServer.getSelectedIndex()));
      prop.setProperty("mail.smptUrl", tf_server_smtp.getText());
      prop.setProperty("mail.smtpPorta", tf_server_smtp_port.getText());
      prop.setProperty("mail.loginEmail", tf_usuario_server.getText());
      prop.setProperty("mail.senhaEmail", tf_senha_server.getText());
      prop.setProperty("mail.serverProxOn", String.valueOf(jcb_check_proxy.isSelected()));
      prop.setProperty("mail.proxyHost", tf_server_proxy.getText());
      prop.setProperty("mail.proxyPorta", tf_server_proxy_port.getText());
      prop.setProperty("mail.proxyUsuario", "");
      prop.setProperty("mail.proxySenha", "");
      prop.setProperty("mail.emailDestino", tf_email_destino.getText());
      prop.setProperty("mail.emailAssunto", tf_subject.getText());
      prop.setProperty("mail.ultimoIP", tf_ultimo_ip.getText());
      prop.setProperty("mail.tempoMin", tf_tempo.getText());
      prop.store(fo, new SimpleDateFormat("dd/MM/yyyy - hh:mm:ss").format(new Date()).toString());
      prop.storeToXML(foXml, new SimpleDateFormat("dd/MM/yyyy - hh:mm:ss").format(new Date()).toString() + " Configuração de email.");
      return true;
    } catch (FileNotFoundException ex) {
      Logger.getLogger(Configuracoes.class.getName()).log(Level.SEVERE, null, ex);
      return false;
    } catch (IOException ex) {
      Logger.getLogger(Configuracoes.class.getName()).log(Level.SEVERE, null, ex);
      return false;
    } finally {
      try {
        foXml.close();
        fo.close();


      } catch (IOException ex) {
        Logger.getLogger(Configuracoes.class.getName()).log(Level.SEVERE, null, ex);
      }
    }

  }

  private boolean validaCampos() {
    if (tf_server_smtp.getText().equalsIgnoreCase("")) {
      JOptionPane.showMessageDialog(null, "Campos vazio: Server SMTP ", "Campo Vazio", 0);
      tf_server_smtp.requestFocus();
      return false;
    }
    if (tf_server_smtp_port.getText().equalsIgnoreCase("")) {
      JOptionPane.showMessageDialog(null, "Campos vazio: Server SMTP Porta", "Campo Vazio", 0);
      tf_server_smtp_port.requestFocus();
      return false;
    }
    if (tf_usuario_server.getText().equalsIgnoreCase("")) {
      JOptionPane.showMessageDialog(null, "Campos vazio: Usuario Email", "Campo Vazio", 0);
      tf_usuario_server.requestFocus();
      return false;
    }
    if (tf_senha_server.getText().equalsIgnoreCase("")) {
      JOptionPane.showMessageDialog(null, "Campos vazio: Usuario Senha", "Campo Vazio", 0);
      tf_senha_server.requestFocus();
      return false;
    }
    if (tf_email_destino.getText().equalsIgnoreCase("")) {
      JOptionPane.showMessageDialog(null, "Campos vazio: Email Destino", "Campo Vazio", 0);
      tf_email_destino.requestFocus();
      return false;
    }
    if(jcb_check_proxy.isSelected() && tf_server_proxy.getText().equalsIgnoreCase("")){
      JOptionPane.showMessageDialog(null, "Campos vazio: proxy Server", "Campo Vazio", 0);
      tf_email_destino.requestFocus();
      return false;
    }
    if(jcb_check_proxy.isSelected() && tf_server_proxy_port.getText().equalsIgnoreCase("")){
      JOptionPane.showMessageDialog(null, "Campos vazio: Proxy porta", "Campo Vazio", 0);
      tf_email_destino.requestFocus();
      return false;
    }
    return true;
  }
}
